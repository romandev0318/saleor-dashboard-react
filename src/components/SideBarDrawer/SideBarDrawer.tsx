// import logoDark from "@assets/images/logo-sidebar-dark.svg";
// import logoLight from "@assets/images/logo-sidebar-light.svg";
import { Drawer, Typography } from "@material-ui/core";
import ArrowLeftIcon from "@material-ui/icons/ArrowLeft";
import MenuIcon from "@material-ui/icons/Menu";
// import useTheme from "@saleor/hooks/useTheme";
import classNames from "classnames";
import React from "react";
import SVG from "react-inlinesvg";
import { useIntl } from "react-intl";

import { IMenuItem } from "../AppLayout/menuStructure";
import { getConfigureMenuItem, SideBarProps } from "../SideBar/SideBar";
import SquareButton from "../SquareButton";
import MenuItemBtn from "./MenuItemBtn";
import useStyles from "./styles";

export type SideBarDrawerProps = SideBarProps;

const SideBarDrawer: React.FC<SideBarDrawerProps> = ({
  menuItems,
  onMenuItemClick,
  renderConfigure,
  user
}) => {
  const [isOpened, setOpened] = React.useState(false);
  const classes = useStyles({});
  const intl = useIntl();
  const [activeMenu, setActiveMenu] = React.useState<IMenuItem>(null);
  const [showSubmenu, setShowSubmenu] = React.useState(false);
  const container = React.useRef<HTMLDivElement>(null);

  const configureMenuItem = getConfigureMenuItem(intl);

  // const { isDark } = useTheme();

  const handleMenuItemClick = (url: string) => {
    setOpened(false);
    setShowSubmenu(false);
    onMenuItemClick(url);
  };

  const handleMenuItemWithChildrenClick = (menuItem: IMenuItem) => {
    setActiveMenu(menuItem);
    setShowSubmenu(true);
    container.current.scrollTo({
      top: 0
    });
  };

  return (
    <>
      <SquareButton onClick={() => setOpened(true)}>
        <MenuIcon />
      </SquareButton>
      <Drawer
        classes={{
          paper: classes.root
        }}
        open={isOpened}
        onClose={() => setOpened(false)}
      >
        <div
          className={classNames(classes.container, {
            [classes.containerSubMenu]: showSubmenu
          })}
          ref={container}
        >
          <div
            className={classNames(classes.innerContainer, {
              [classes.secondaryContentActive]: showSubmenu
            })}
          >
            <div className={classes.content}>
              {/* <SVG
                className={classes.logo}
                src={isDark ? logoDark : logoLight}
              /> */}
              <svg
                width="28"
                height="32"
                viewBox="0 0 28 32"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className={classes.logo}
              >
                <path
                  d="M26.9967 28.0123L25.2834 25.1571C25.071 24.805 24.7714 24.5136 24.4136 24.3109C24.0559 24.1082 23.6519 24.0012 23.2407 24H17.4807L18.0797 21.2043C19.1669 20.9625 20.1486 20.3803 20.8822 19.5423C21.0359 19.3662 21.1773 19.1798 21.3057 18.9846L22.2668 18.3438C23.2174 17.7114 23.9967 16.8537 24.5354 15.8472C25.074 14.8406 25.3553 13.7164 25.354 12.5747V11.9554C25.3584 10.6668 25.0016 9.40274 24.324 8.30665C23.6465 7.21056 22.6753 6.32628 21.5207 5.75412C21.3627 5.67482 21.236 5.54452 21.1612 5.3843C21.0864 5.22408 21.0679 5.04331 21.1086 4.87125C21.1493 4.69918 21.2469 4.54589 21.3856 4.43618C21.5242 4.32647 21.6959 4.26677 21.8727 4.26672H23.408C23.7585 4.26667 24.0965 4.13633 24.3562 3.90102C24.616 3.66571 24.7789 3.34224 24.8135 2.99347C24.8481 2.6447 24.7518 2.29552 24.5433 2.0138C24.3348 1.73208 24.029 1.53792 23.6854 1.46906L21.8836 1.10906L21.4832 0.708594C21.145 0.370283 20.714 0.139875 20.2448 0.0465105C19.7756 -0.0468545 19.2893 0.00101694 18.8473 0.18407C18.4053 0.367124 18.0275 0.677137 17.7617 1.0749C17.4959 1.47267 17.354 1.94033 17.354 2.41872V4.52139C17.3514 5.34584 17.5797 6.15455 18.0132 6.85586C18.4466 7.55716 19.0679 8.12301 19.8066 8.48924C20.3518 8.76191 20.8103 9.18102 21.1307 9.69961C21.4511 10.2182 21.6208 10.8158 21.6207 11.4254C21.6207 11.5161 21.617 11.6046 21.6097 11.6908C21.5767 12.1094 21.4629 12.5177 21.2746 12.8931C21.2579 12.9264 21.239 12.9584 21.2212 12.9911C20.7321 12.275 20.0757 11.6889 19.3088 11.2839C18.542 10.8788 17.6879 10.667 16.8207 10.6667H6.15405C5.02285 10.668 3.93835 11.1179 3.13847 11.9178C2.33859 12.7177 1.88866 13.8022 1.88739 14.9334C1.88822 15.3475 2.05328 15.7444 2.34636 16.0369C2.63944 16.3295 3.0366 16.4939 3.45072 16.494C3.80368 16.4943 4.14596 16.373 4.41992 16.1504L4.83199 15.8208C4.97587 16.0285 5.16798 16.1983 5.39184 16.3156C5.61571 16.4328 5.86466 16.4941 6.11738 16.4941C6.47034 16.4944 6.81262 16.373 7.08658 16.1505L7.59032 15.7475L7.75031 16.0414C8.33846 17.1238 9.1203 18.0891 10.057 18.8892L7.42892 20.9107C7.33667 20.9817 7.27018 21.0809 7.23958 21.1931L5.69205 26.867L2.91573 28.7179L2.69093 28.6055C2.39144 28.4556 2.04837 28.4172 1.72316 28.4971C1.39794 28.5771 1.11182 28.7703 0.916027 29.042C0.720234 29.3137 0.627559 29.6462 0.654599 29.98C0.681639 30.3139 0.826627 30.6271 1.0636 30.8638L1.61827 31.4185C1.80218 31.6034 2.02095 31.75 2.26191 31.8498C2.50287 31.9497 2.76124 32.0007 3.02206 32C3.22754 31.9998 3.43177 31.9679 3.62752 31.9054C3.82371 31.8429 4.00886 31.7499 4.17619 31.6299L7.63205 29.1593C8.1244 28.8088 8.49831 28.3166 8.70398 27.7483L10.3111 23.3283L13.6207 21.8579V26.6667C13.6207 26.8081 13.6769 26.9438 13.7769 27.0438C13.8769 27.1438 14.0126 27.2 14.154 27.2H22.9188L24.2126 29.3565L24.1162 29.5491C23.9666 29.8481 23.9225 30.1889 23.9908 30.5161C24.0592 30.8433 24.2361 31.1379 24.4928 31.352C24.7495 31.5661 25.071 31.6873 25.4052 31.6958C25.7394 31.7043 26.0667 31.5997 26.334 31.399C26.8439 31.0165 27.1938 30.4586 27.3163 29.8331C27.4387 29.2075 27.3249 28.5588 26.997 28.0123H26.9967ZM23.6758 2.63512C23.7173 2.68579 23.7435 2.7472 23.7515 2.81221C23.7595 2.87723 23.7488 2.94316 23.7207 3.00235C23.6927 3.06154 23.6484 3.11154 23.593 3.14654C23.5377 3.18154 23.4735 3.2001 23.408 3.20006H22.154V2.25066L23.4754 2.51492C23.5542 2.53038 23.6251 2.5729 23.6758 2.63512ZM20.2833 7.53511C19.7223 7.25691 19.2505 6.82712 18.9213 6.29446C18.5921 5.7618 18.4187 5.14757 18.4207 4.52139V2.41872C18.4207 2.15132 18.5001 1.88992 18.6486 1.66759C18.7972 1.44526 19.0084 1.27197 19.2554 1.16963C19.5025 1.0673 19.7743 1.04051 20.0366 1.09265C20.2989 1.1448 20.5398 1.27354 20.7289 1.46259L21.0874 1.82099V3.37532C20.7721 3.52276 20.5048 3.75605 20.3161 4.04844C20.1274 4.34083 20.025 4.68049 20.0204 5.02846C20.0159 5.37643 20.1096 5.71862 20.2907 6.0158C20.4718 6.31298 20.7329 6.55311 21.0442 6.70865C21.9059 7.13563 22.6486 7.7692 23.2059 8.55287C23.7633 9.33654 24.1181 10.246 24.2388 11.2H22.6807C22.6412 10.4316 22.3984 9.68742 21.9772 9.04351C21.556 8.39961 20.9714 7.87906 20.2831 7.53505L20.2833 7.53511ZM22.2282 13.3709C22.4031 13.0216 22.5296 12.6501 22.6045 12.2667H24.2874V12.5747C24.2883 13.4628 24.0871 14.3396 23.699 15.1384C23.3109 15.9373 22.7461 16.6374 22.0474 17.1856C22.118 16.8429 22.1538 16.4939 22.154 16.144V16C22.1543 15.3394 22.031 14.6845 21.7908 14.0691C21.9583 13.8507 22.1048 13.6169 22.2282 13.3708V13.3709ZM21.0874 16V16.1442C21.088 18.1988 19.6016 19.9126 17.554 20.2191C17.342 20.2503 17.1279 20.2659 16.9135 20.2658H16.6622C16.51 20.2658 16.358 20.2619 16.2059 20.2541C16.6083 19.8667 16.8645 19.3521 16.931 18.7975C16.9974 18.2429 16.8702 17.6824 16.5707 17.2109L16.6274 17.1731C17.2915 16.7313 17.867 16.1692 18.3242 15.5158L17.4509 14.9036C17.0696 15.4484 16.5897 15.9171 16.036 16.2854L14.3734 17.3934C14.3556 17.4053 14.3384 17.4183 14.3221 17.4322C14.1919 17.5439 14.025 17.6036 13.8534 17.5999C13.6819 17.5961 13.5178 17.5291 13.3926 17.4118C13.2674 17.2945 13.1899 17.1351 13.175 16.9641C13.1601 16.7932 13.2088 16.6228 13.3118 16.4856L13.9638 15.6162C14.0359 15.52 14.0734 15.4024 14.0703 15.2823C14.0671 15.1623 14.0236 15.0467 13.9466 14.9545C13.8696 14.8623 13.7638 14.7988 13.6462 14.7742C13.5286 14.7496 13.4062 14.7655 13.2987 14.8192L11.9979 15.4696C11.8804 15.5284 11.7473 15.5488 11.6176 15.5277C11.4879 15.5066 11.3681 15.4452 11.2753 15.3522C11.2118 15.2888 11.1628 15.2125 11.1314 15.1285C11.1001 15.0444 11.0871 14.9547 11.0935 14.8652C11.0999 14.7757 11.1254 14.6887 11.1683 14.6099C11.2112 14.5312 11.2706 14.4626 11.3423 14.4088L12.321 13.6747C12.4178 13.6021 12.487 13.4989 12.5173 13.3818C12.5476 13.2647 12.5373 13.1409 12.4879 13.0305C12.4386 12.9201 12.3532 12.8297 12.2458 12.7742C12.1383 12.7187 12.0152 12.7014 11.8966 12.725L10.4888 13.0061C10.4008 13.0236 10.3102 13.0225 10.2227 13.0028C10.1352 12.9832 10.0528 12.9454 9.98077 12.892C9.90874 12.8386 9.84869 12.7707 9.80448 12.6927C9.76027 12.6147 9.73288 12.5283 9.72407 12.439C9.71525 12.3498 9.72522 12.2597 9.75332 12.1746C9.78142 12.0894 9.82703 12.0111 9.88723 11.9446C9.94742 11.8781 10.0209 11.825 10.1028 11.7886C10.1848 11.7522 10.2734 11.7334 10.3631 11.7334H16.8207C17.9519 11.7346 19.0364 12.1846 19.8363 12.9844C20.6362 13.7843 21.0861 14.8688 21.0874 16ZM8.68698 15.5308L8.22231 14.6782C8.18502 14.6097 8.13317 14.5503 8.07042 14.504C8.00768 14.4578 7.93556 14.4258 7.85914 14.4105C7.78272 14.3951 7.70386 14.3967 7.62811 14.4151C7.55236 14.4335 7.48157 14.4683 7.42072 14.517L6.41965 15.318C6.33471 15.3886 6.2278 15.4273 6.11738 15.4274C6.05216 15.4282 5.98743 15.416 5.92699 15.3915C5.86654 15.367 5.81158 15.3306 5.76534 15.2846C5.71909 15.2386 5.68248 15.1839 5.65765 15.1236C5.63282 15.0633 5.62026 14.9986 5.62072 14.9334C5.62073 14.8329 5.59236 14.7344 5.53886 14.6494C5.48537 14.5643 5.40893 14.4961 5.31836 14.4526C5.22778 14.4091 5.12676 14.392 5.02692 14.4034C4.92708 14.4148 4.8325 14.4542 4.75405 14.517L3.75299 15.318C3.66805 15.3886 3.56114 15.4273 3.45072 15.4274C3.3855 15.4282 3.32077 15.416 3.26032 15.3915C3.19988 15.367 3.14492 15.3306 3.09867 15.2846C3.05243 15.2386 3.01582 15.1839 2.99099 15.1236C2.96616 15.0633 2.9536 14.9986 2.95406 14.9334C2.95503 14.085 3.29248 13.2716 3.89239 12.6717C4.49229 12.0718 5.30566 11.7343 6.15405 11.7334H8.77958C8.67807 11.9833 8.63718 12.2538 8.66026 12.5226C8.68333 12.7914 8.76972 13.0509 8.91234 13.2799C9.05496 13.5089 9.24978 13.7009 9.48084 13.8402C9.71191 13.9795 9.97266 14.0621 10.2418 14.0812C10.0794 14.3706 10.0056 14.7013 10.0296 15.0322C10.0536 15.3631 10.1743 15.6797 10.3768 15.9426C10.5792 16.2055 10.8544 16.4031 11.1682 16.5109C11.482 16.6187 11.8205 16.6319 12.1418 16.5489C12.0924 16.7907 12.0944 17.0402 12.1477 17.2812L10.9235 18.2229C10.0091 17.4804 9.24929 16.5658 8.68698 15.5308ZM9.67078 22.4459C9.60528 22.4751 9.54631 22.5171 9.4974 22.5696C9.4485 22.622 9.41065 22.6837 9.38611 22.7511L7.70138 27.3844C7.56907 27.7499 7.32855 28.0664 7.01185 28.2917L3.55526 30.7626C3.47863 30.8177 3.39382 30.8605 3.30392 30.8893C3.21279 30.9184 3.11772 30.9332 3.02206 30.9333C2.90137 30.9336 2.78183 30.91 2.67033 30.8638C2.55884 30.8176 2.45762 30.7498 2.37253 30.6642L1.81786 30.1095C1.76042 30.0519 1.72533 29.9756 1.71888 29.8945C1.71242 29.8134 1.73501 29.7326 1.78262 29.6665C1.83023 29.6005 1.89975 29.5535 1.97877 29.534C2.0578 29.5145 2.14119 29.5237 2.21406 29.56L2.71539 29.8106C2.7995 29.8526 2.89323 29.8717 2.98708 29.8659C3.08093 29.86 3.17156 29.8294 3.24979 29.7773L6.44978 27.6439C6.55695 27.5725 6.63463 27.4647 6.66845 27.3405L8.22125 21.6472L12.6867 18.2124C13.0003 18.4962 13.4054 18.6577 13.8282 18.6674C14.251 18.6771 14.6631 18.5343 14.9893 18.2652L15.6814 17.804C15.8541 18.0855 15.9179 18.4203 15.8609 18.7456C15.804 19.0708 15.6301 19.364 15.372 19.57C14.732 20.0819 14.0289 20.5096 13.28 20.8425L9.67078 22.4459ZM25.6936 30.5459C25.6184 30.6023 25.5264 30.6316 25.4325 30.6292C25.3386 30.6267 25.2483 30.5927 25.1762 30.5325C25.1041 30.4723 25.0544 30.3896 25.0351 30.2976C25.0159 30.2057 25.0283 30.11 25.0702 30.0259L25.2976 29.5719C25.3378 29.4916 25.3571 29.4025 25.3537 29.3128C25.3502 29.223 25.3242 29.1356 25.278 29.0586L23.678 26.3919C23.6306 26.313 23.5636 26.2477 23.4834 26.2024C23.4033 26.1571 23.3128 26.1333 23.2207 26.1333H14.6874V21.3214C14.7666 21.2759 14.8458 21.2301 14.9239 21.1826C15.4979 21.2824 16.0794 21.3326 16.662 21.3327H16.9134C16.9293 21.3327 16.9453 21.3319 16.9612 21.3318L16.2992 24.4216C16.2826 24.4994 16.2835 24.5799 16.302 24.6572C16.3205 24.7346 16.356 24.8068 16.406 24.8686C16.456 24.9305 16.5192 24.9804 16.5909 25.0146C16.6627 25.0489 16.7412 25.0667 16.8207 25.0667H23.2407C23.4678 25.0673 23.6909 25.1264 23.8885 25.2384C24.0861 25.3503 24.2515 25.5113 24.3688 25.7057L26.0821 28.5609C26.2744 28.8812 26.3411 29.2614 26.2694 29.628C26.1976 29.9947 25.9925 30.3217 25.6937 30.5459H25.6936Z"
                  fill="#222222"
                />
              </svg>
              {menuItems.map(menuItem => {
                if (
                  menuItem.permission &&
                  !user.userPermissions
                    .map(perm => perm.code)
                    .includes(menuItem.permission)
                ) {
                  return null;
                }

                return (
                  <MenuItemBtn
                    menuItem={menuItem}
                    onClick={
                      menuItem.children
                        ? () => handleMenuItemWithChildrenClick(menuItem)
                        : handleMenuItemClick
                    }
                    key={menuItem.ariaLabel}
                  />
                );
              })}
              {renderConfigure && (
                <MenuItemBtn
                  menuItem={configureMenuItem}
                  onClick={handleMenuItemClick}
                />
              )}
            </div>
            {activeMenu && (
              <div className={classes.content}>
                <div className={classes.subMenuTopBar}>
                  <div className={classes.activeMenuLabel}>
                    <SVG className={classes.icon} src={activeMenu.icon} />
                    <Typography className={classes.label}>
                      {activeMenu.label}
                    </Typography>
                  </div>
                  <SquareButton onClick={() => setShowSubmenu(false)}>
                    <ArrowLeftIcon />
                  </SquareButton>
                </div>
                {activeMenu.children.map(subMenuItem => (
                  <MenuItemBtn
                    menuItem={subMenuItem}
                    onClick={handleMenuItemClick}
                    key={subMenuItem.ariaLabel}
                  />
                ))}
              </div>
            )}
          </div>
        </div>
      </Drawer>
    </>
  );
};

SideBarDrawer.displayName = "SideBarDrawer";
export default SideBarDrawer;
